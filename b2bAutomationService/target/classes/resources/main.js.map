{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/filerecord/filerecord.component.css","webpack:///./src/app/filerecord/filerecord.component.html","webpack:///./src/app/filerecord/filerecord.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<html>\\n<head>\\n<style>\\n   html{\\n    margin-left: -8px;\\n    margin-top: -8px;\\n    margin-bottom: 4px;\\n    vertical-align: top;\\n    width: 101%;\\n    height: 781px;\\n    background-image: url(\\\"../assets/Background.jpg\\\");\\n    background-position: bottom;\\n    \\n}\\n</style>\\n</head>\\n<body>\\n  <table style=\\\"width: 100%;\\\">\\n    <tr>\\n      <td style=\\\"width: 100%;font-family: sans-serif;font-size: 50px;color: azure;\\n      vertical-align: center; text-align: center;height: 100px;\\\" colspan=\\\"5\\\">\\n      B2B UTILITY\\n      </td>\\n    </tr>\\n    <tr>\\n<td style=\\\"height: 100px;\\\" colspan=\\\"5\\\">\\n\\n  </td>\\n      </tr>\\n      <tr style=\\\"height: 70px;color:lightsteelblue\\\">\\n          <td style=\\\"font-size: 80px;\\\">\\n              \\n           </td>\\n          <td style=\\\"font-size: 20px;\\\">\\n            <b> Track Details :</b>\\n          </td>\\n          <td style=\\\"font-size: 20px;\\\">\\n            <b> Application Name :</b>\\n          </td>\\n          <td style=\\\"font-size: 20px;\\\">\\n            <b> Service :</b>\\n          </td>\\n           <td style=\\\"font-size: 20px;\\\">\\n            <b>  Test Scenarios :</b>\\n          </td>\\n          </tr>\\n      <tr>\\n          <td style=\\\"width: 10%;\\\">\\n           \\n           </td>\\n        <td style=\\\"width: 25%;\\\">\\n            <select (input)=\\\"fillTrackName($event)\\\">\\n              <option *ngFor=\\\"let track of tracks\\\" >{{track}}</option>\\n            </select>\\n        </td>\\n        <td style=\\\"width: 25%\\\">\\n            <select (input)=\\\"fillApplicationName($event)\\\">\\n                <option *ngFor=\\\"let application of applications\\\">{{application}}</option>\\n              </select>\\n        </td>\\n        <td style=\\\"width: 25%\\\">\\n            <select (input)=\\\"fillServiceName($event)\\\">\\n               <option *ngFor=\\\"let service of services\\\">{{service}}</option>\\n              </select>\\n        </td>\\n        <td style=\\\"width: 25%;text-align: left;\\\">\\n           <select>\\n                <option value=\\\"volvo\\\">File 1</option>\\n                <option value=\\\"saab\\\">File 2</option>\\n                <option value=\\\"opel\\\">File 3</option>\\n                <option value=\\\"audi\\\">File 4</option>\\n            </select>\\n            <a href=\\\"\\\" style=\\\"color:rgb(206, 206, 206);font-family: serif;font-weight: bold;padding-left: 10px;\\\">Upload</a>\\n          </td>\\n        </tr>\\n        <tr>\\n            <td style=\\\"width: 100%;font-family: sans-serif;font-size: 50px;color: azure;\\n            vertical-align: center; text-align: center;height: 400px;\\\" colspan=\\\"5\\\">\\n            <button type=\\\"submit\\\" form=\\\"form1\\\" class=\\\"btn-outline-dark\\\" value=\\\"Submit\\\" (click)=\\\"getDataFromMongo()\\\">Submit</button>\\n            </td>\\n          </tr>\\n    </table>\\n\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'download.jpg';\n  tracks=['(None)','B2B','Order','Notifications','Quoting'];\n  applications=['(None)','NGC','NGOO','PUNCHOUT','EWS','QWS'];\n  services=['(None)','VCS','Preview BTO','Cisco ONE','Config Recommendation'];\n  track='';\n  application='';\n  service='';\n  constructor(\n  ){\n\n  }\n  fillTrackName(event:Event){\n       this.service=(<HTMLSelectElement>event.target).value;\n  }\n  fillApplicationName(event:Event){\n    this.service=(<HTMLSelectElement>event.target).value;\n}\nfillServiceName(event:Event){\n  this.service=(<HTMLSelectElement>event.target).value;\n}\ngetDataFromMongo(){\n\n}\nngOnInit(){}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FilerecordComponent } from './filerecord/filerecord.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilerecordComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVyZWNvcmQvZmlsZXJlY29yZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  filerecord works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-filerecord',\n  templateUrl: './filerecord.component.html',\n  styleUrls: ['./filerecord.component.css']\n})\nexport class FilerecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}